// Generated by CoffeeScript 1.4.0
(function() {
  var nodeListToArray, top, _find;

  top = typeof exports !== "undefined" && exports !== null ? exports : window;

  top.processContentFirst = function(html, allDevices, selectedDevice) {
    'use strict';

    var aDevices, aExcludes, doc, dom, node, sSelectedDevice;
    aDevices = allDevices || [];
    sSelectedDevice = selectedDevice || [];
    dom = new DOMParser();
    doc = dom.parseFromString(html, 'text/html');
    aExcludes = nodeListToArray(doc.getElementsByTagName('ef'));
    if (aDevices.length) {
      while (node = aExcludes.shift()) {
        if (node.hasAttributes() && node.attributes.platform) {
          if (node.parentNode && _find(selectedDevice, node.attributes.platform.value.split(','))) {
            node.parentNode.removeChild(node);
          }
        }
      }
    }
    return doc.getElementsByTagName('body')[0].innerHTML;
  };

  nodeListToArray = function(nodelist) {
    var tag, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = nodelist.length; _i < _len; _i++) {
      tag = nodelist[_i];
      _results.push(tag);
    }
    return _results;
  };

  _find = function(term, array) {
    return array.some(function(val) {
      return val === term;
    });
  };

  
/*! @source https://gist.github.com/1129031 */
/*global document, DOMParser*/
 
(function(DOMParser) {
	"use strict";
 
	var
	  DOMParser_proto = DOMParser.prototype
	, real_parseFromString = DOMParser_proto.parseFromString
	;
 
	// Firefox/Opera/IE throw errors on unsupported types
	try {
		// WebKit returns null on unsupported types
		if ((new DOMParser).parseFromString("", "text/html")) {
			// text/html parsing is natively supported
			return;
		}
	} catch (ex) {}
 
	DOMParser_proto.parseFromString = function(markup, type) {
		if (/^\s*text\/html\s*(?:;|$)/i.test(type)) {
			var
			  doc = document.implementation.createHTMLDocument("")
			;
 
			doc.body.innerHTML = markup;
			return doc;
		} else {
			return real_parseFromString.apply(this, arguments);
		}
	};
}(DOMParser));
;


}).call(this);
